@{
    Layout = "_Layout";
}
<html>
<head>
    <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/3.2.0/css/bootstrap.min.css">
    <link type="text/css" rel="stylesheet" href="https://rawgit.com/huston007/react-combo-box/master/dist/css/combobox.css">
    <link rel="stylesheet" href="style.css">

    <script src='http://fb.me/react-with-addons-0.11.2.js'></script>
    <script src='https://rawgit.com/huston007/react-combo-box/master/dist/js/combobox.js'></script>

    <!--only for demo purposes, not required for combobox-->
    <script src='https://rawgit.com/kriskowal/q/v1/q.js'></script>
    
    
</head>

<body>        
    
    <div id="bla" class="Shopping"></div>
    <div id="bi" class="combobox-container"></div>

    Kunde:
    <div id="default" class="combobox-container"></div>
    <!--
    Can be disabled as well: <a href="javascript:void(0)" id="disableToggler">toggle</a>
    <div id="disableable" class="combobox-container"></div>

    You can provide custom dropdown items:
    <div id="customItem" class="combobox-container"></div>

    You can provide your own datasource with promise interface
    <div id="promiseSource" class="combobox-container"></div>

    Or even just callback-styled datasource:
    <div id="callbackSource" class="combobox-container"></div>

    Array of objects can be a source too:
    <div id="objectsArray" class="combobox-container"></div>

    It's easy to customize.

    <div id="cusomizedInput" class="combobox-container"></div>
        -->

    @Html.ReactInitJavaScript()
</body>

</html>